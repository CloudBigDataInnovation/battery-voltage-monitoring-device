

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 12 00:26:47 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  01E9                     __pidataBANK0:
   215                           
   216                           ;initializer for _Segments_Code
   217  01E9  343F               	retlw	63
   218  01EA  3406               	retlw	6
   219  01EB  345B               	retlw	91
   220  01EC  344F               	retlw	79
   221  01ED  3466               	retlw	102
   222  01EE  346D               	retlw	109
   223  01EF  347D               	retlw	125
   224  01F0  3407               	retlw	7
   225  01F1  347F               	retlw	127
   226  01F2  346F               	retlw	111
   227  000E                     _TMR1	set	14
   228  0008                     _PORTD	set	8
   229  0007                     _PORTCbits	set	7
   230  005F                     _GIE	set	95
   231  005E                     _PEIE	set	94
   232  0080                     _TMR1ON	set	128
   233  0085                     _T1CKPS1	set	133
   234  0084                     _T1CKPS0	set	132
   235  0081                     _TMR1CS	set	129
   236  0060                     _TMR1IF	set	96
   237  00F8                     _ADON	set	248
   238  0088                     _TRISD	set	136
   239  0460                     _TMR1IE	set	1120
   240  043B                     _TRISC3	set	1083
   241  043A                     _TRISC2	set	1082
   242  0439                     _TRISC1	set	1081
   243  0438                     _TRISC0	set	1080
   244                           
   245                           	psect	cinit
   246  0011                     start_initialization:	
   247                           ; #config settings
   248                           
   249  0011                     __initialization:
   250                           
   251                           ; Initialize objects allocated to BANK0
   252  0011  1383               	bcf	3,7	;select IRP bank0
   253  0012  302A               	movlw	low (__pdataBANK0+10)
   254  0013  00FD               	movwf	btemp+-1
   255  0014  3001               	movlw	high __pidataBANK0
   256  0015  00FE               	movwf	btemp
   257  0016  30E9               	movlw	low __pidataBANK0
   258  0017  00FF               	movwf	btemp+1
   259  0018  3020               	movlw	low __pdataBANK0
   260  0019  0084               	movwf	4
   261  001A  120A  118A  21BB  120A  118A  	fcall	init_ram0
   262                           
   263                           ; Clear objects allocated to BANK0
   264  001F  01AA               	clrf	__pbssBANK0& (0+127)
   265  0020  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   266  0021  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   267  0022  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   268  0023  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   269  0024  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   270  0025  01B0               	clrf	(__pbssBANK0+6)& (0+127)
   271  0026  01B1               	clrf	(__pbssBANK0+7)& (0+127)
   272                           
   273                           ; Clear objects allocated to COMMON
   274  0027  01F9               	clrf	__pbssCOMMON& (0+127)
   275  0028                     end_of_initialization:	
   276                           ;End of C runtime variable initialization code
   277                           
   278  0028                     __end_of__initialization:
   279  0028  0183               	clrf	3
   280  0029  120A  118A  2988   	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	bssCOMMON
   283  0079                     __pbssCOMMON:
   284  0079                     _Check:
   285  0079                     	ds	1
   286                           
   287                           	psect	bssBANK0
   288  002A                     __pbssBANK0:
   289  002A                     _SevenSeg1_Digits:
   290  002A                     	ds	8
   291                           
   292                           	psect	dataBANK0
   293  0020                     __pdataBANK0:
   294  0020                     _Segments_Code:
   295  0020                     	ds	10
   296                           
   297                           	psect	inittext
   298  01B7                     init_fetch0:	
   299                           ;	Called with low address in FSR and high address in W
   300                           
   301  01B7  087E               	movf	btemp,w
   302  01B8  008A               	movwf	10
   303  01B9  087F               	movf	btemp+1,w
   304  01BA  0082               	movwf	2
   305  01BB                     init_ram0:	
   306                           ;Called with:
   307                           ;	high address of idata address in btemp 
   308                           ;	low address of idata address in btemp+1 
   309                           ;	low address of data in FSR
   310                           ;	high address + 1 of data in btemp-1
   311                           
   312  01BB  120A  118A  21B7  120A  118A  	fcall	init_fetch0
   313  01C0  0080               	movwf	0
   314  01C1  0A84               	incf	4,f
   315  01C2  0804               	movf	4,w
   316  01C3  067D               	xorwf	btemp+-1,w
   317  01C4  1903               	btfsc	3,2
   318  01C5  3400               	retlw	0
   319  01C6  0AFF               	incf	btemp+1,f
   320  01C7  1903               	btfsc	3,2
   321  01C8  0AFE               	incf	btemp,f
   322  01C9  29BB               	goto	init_ram0
   323                           
   324                           	psect	cstackCOMMON
   325  0070                     __pcstackCOMMON:
   326  0070                     ?_SevenSeg1_Init:
   327  0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_ISR:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ??_ISR:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_TMR1_Init:	
   337                           ; 1 bytes @ 0x0
   338                           
   339                           
   340                           ; 1 bytes @ 0x0
   341  0070                     	ds	4
   342  0074                     ??_SevenSeg1_Init:
   343  0074                     ??_TMR1_Init:	
   344                           ; 1 bytes @ 0x4
   345                           
   346  0074                     ?___lwdiv:	
   347                           ; 1 bytes @ 0x4
   348                           
   349  0074                     ?___lwmod:	
   350                           ; 2 bytes @ 0x4
   351                           
   352  0074                     ___lwdiv@divisor:	
   353                           ; 2 bytes @ 0x4
   354                           
   355  0074                     ___lwmod@divisor:	
   356                           ; 2 bytes @ 0x4
   357                           
   358                           
   359                           ; 2 bytes @ 0x4
   360  0074                     	ds	2
   361  0076                     ___lwdiv@dividend:
   362  0076                     ___lwmod@dividend:	
   363                           ; 2 bytes @ 0x6
   364                           
   365                           
   366                           ; 2 bytes @ 0x6
   367  0076                     	ds	2
   368  0078                     ??___lwdiv:
   369  0078                     ??___lwmod:	
   370                           ; 1 bytes @ 0x8
   371                           
   372                           
   373                           ; 1 bytes @ 0x8
   374  0078                     	ds	1
   375  0079                     ??_SevenSeg1_Write:
   376                           
   377                           	psect	cstackBANK0
   378  0032                     __pcstackBANK0:	
   379                           ; 1 bytes @ 0x9
   380                           
   381  0032                     ___lwmod@counter:
   382  0032                     ___lwdiv@quotient:	
   383                           ; 1 bytes @ 0x0
   384                           
   385                           
   386                           ; 2 bytes @ 0x0
   387  0032                     	ds	2
   388  0034                     ___lwdiv@counter:
   389                           
   390                           ; 1 bytes @ 0x2
   391  0034                     	ds	1
   392  0035                     ?_SevenSeg1_Write:
   393  0035                     SevenSeg1_Write@num:	
   394                           ; 1 bytes @ 0x3
   395                           
   396                           
   397                           ; 2 bytes @ 0x3
   398  0035                     	ds	2
   399  0037                     ??_main:
   400                           
   401                           ; 1 bytes @ 0x5
   402  0037                     	ds	3
   403                           
   404                           	psect	maintext
   405  0188                     __pmaintext:	
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 23 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, status,2, status,0, pclath, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : B00/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0
   427 ;;      Temps:          0       3       0       0       0
   428 ;;      Totals:         0       3       0       0       0
   429 ;;Total ram usage:        3 bytes
   430 ;; Hardware stack levels required when called: 3
   431 ;; This function calls:
   432 ;;		_SevenSeg1_Init
   433 ;;		_SevenSeg1_Write
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           
   440                           ;psect for function _main
   441  0188                     _main:
   442  0188                     l984:	
   443                           ;incstack = 0
   444                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   445                           
   446                           
   447                           ;main.c: 25:   SevenSeg1_Init();
   448  0188  120A  118A  21DD  120A  118A  	fcall	_SevenSeg1_Init
   449  018D                     l986:
   450                           
   451                           ;main.c: 27:    TRISC0 =0;
   452  018D  1683               	bsf	3,5	;RP0=1, select bank1
   453  018E  1303               	bcf	3,6	;RP1=0, select bank1
   454  018F  1007               	bcf	7,0	;volatile
   455  0190                     l988:
   456                           
   457                           ;main.c: 28:    TRISC1=0;
   458  0190  1087               	bcf	7,1	;volatile
   459  0191                     l990:
   460                           
   461                           ;main.c: 29:    TRISC2=0;
   462  0191  1107               	bcf	7,2	;volatile
   463  0192                     l992:
   464                           
   465                           ;main.c: 30:    TRISC3=0;
   466  0192  1187               	bcf	7,3	;volatile
   467  0193                     l994:
   468                           
   469                           ;main.c: 31:    PORTCbits.RC0=0;
   470  0193  1283               	bcf	3,5	;RP0=0, select bank0
   471  0194  1303               	bcf	3,6	;RP1=0, select bank0
   472  0195  1007               	bcf	7,0	;volatile
   473  0196                     l996:
   474                           
   475                           ;main.c: 32:    PORTCbits.RC1=0;
   476  0196  1087               	bcf	7,1	;volatile
   477  0197                     l998:
   478                           
   479                           ;main.c: 33:    PORTCbits.RC2=0;
   480  0197  1107               	bcf	7,2	;volatile
   481  0198                     l1000:
   482                           
   483                           ;main.c: 34:    PORTCbits.RC3=0;
   484  0198  1187               	bcf	7,3	;volatile
   485  0199                     l1002:
   486                           
   487                           ;main.c: 36:    ADON =0;
   488  0199  101F               	bcf	31,0	;volatile
   489  019A                     l1004:
   490                           
   491                           ;main.c: 38:   {;main.c: 39:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   492  019A  300B               	movlw	11
   493  019B  1283               	bcf	3,5	;RP0=0, select bank0
   494  019C  1303               	bcf	3,6	;RP1=0, select bank0
   495  019D  00B9               	movwf	??_main+2
   496  019E  3026               	movlw	38
   497  019F  00B8               	movwf	??_main+1
   498  01A0  305D               	movlw	93
   499  01A1  00B7               	movwf	??_main
   500  01A2                     u457:
   501  01A2  0BB7               	decfsz	??_main,f
   502  01A3  29A2               	goto	u457
   503  01A4  0BB8               	decfsz	??_main+1,f
   504  01A5  29A2               	goto	u457
   505  01A6  0BB9               	decfsz	??_main+2,f
   506  01A7  29A2               	goto	u457
   507                           
   508                           ;main.c: 40:     SevenSeg1_Write(1111);
   509  01A8  3057               	movlw	87
   510  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   511  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   512  01AB  00B5               	movwf	SevenSeg1_Write@num
   513  01AC  3004               	movlw	4
   514  01AD  00B6               	movwf	SevenSeg1_Write@num+1
   515  01AE  120A  118A  202C  120A  118A  	fcall	_SevenSeg1_Write
   516  01B3  299A               	goto	l1004
   517  01B4  120A  118A  280E   	ljmp	start
   518  01B7                     __end_of_main:
   519                           
   520                           	psect	text1
   521  002C                     __ptext1:	
   522 ;; *************** function _SevenSeg1_Write *****************
   523 ;; Defined at:
   524 ;;		line 121 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  num             2    3[BANK0 ] unsigned int 
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       2       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0
   541 ;;      Totals:         0       2       0       0       0
   542 ;;Total ram usage:        2 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 2
   545 ;; This function calls:
   546 ;;		___lwdiv
   547 ;;		___lwmod
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           
   554                           ;psect for function _SevenSeg1_Write
   555  002C                     _SevenSeg1_Write:
   556  002C                     l980:	
   557                           ;incstack = 0
   558                           ; Regs used in _SevenSeg1_Write: [wreg+status,2+status,0+pclath+cstack]
   559                           
   560                           
   561                           ;main.c: 121: void SevenSeg1_Write(unsigned int num);main.c: 122: {;main.c: 124:     Sev
      +                          enSeg1_Digits[0] = num / 1000;
   562  002C  30E8               	movlw	232
   563  002D  00F4               	movwf	___lwdiv@divisor
   564  002E  3003               	movlw	3
   565  002F  00F5               	movwf	___lwdiv@divisor+1
   566  0030  1283               	bcf	3,5	;RP0=0, select bank0
   567  0031  1303               	bcf	3,6	;RP1=0, select bank0
   568  0032  0836               	movf	SevenSeg1_Write@num+1,w
   569  0033  00F7               	movwf	___lwdiv@dividend+1
   570  0034  0835               	movf	SevenSeg1_Write@num,w
   571  0035  00F6               	movwf	___lwdiv@dividend
   572  0036  120A  118A  2106  120A  118A  	fcall	___lwdiv
   573  003B  0875               	movf	?___lwdiv+1,w
   574  003C  1283               	bcf	3,5	;RP0=0, select bank0
   575  003D  1303               	bcf	3,6	;RP1=0, select bank0
   576  003E  00AB               	movwf	_SevenSeg1_Digits+1
   577  003F  0874               	movf	?___lwdiv,w
   578  0040  00AA               	movwf	_SevenSeg1_Digits
   579                           
   580                           ;main.c: 125:     num%=1000;
   581  0041  30E8               	movlw	232
   582  0042  00F4               	movwf	___lwmod@divisor
   583  0043  3003               	movlw	3
   584  0044  00F5               	movwf	___lwmod@divisor+1
   585  0045  0836               	movf	SevenSeg1_Write@num+1,w
   586  0046  00F7               	movwf	___lwmod@dividend+1
   587  0047  0835               	movf	SevenSeg1_Write@num,w
   588  0048  00F6               	movwf	___lwmod@dividend
   589  0049  120A  118A  214C  120A  118A  	fcall	___lwmod
   590  004E  0875               	movf	?___lwmod+1,w
   591  004F  1283               	bcf	3,5	;RP0=0, select bank0
   592  0050  1303               	bcf	3,6	;RP1=0, select bank0
   593  0051  00B6               	movwf	SevenSeg1_Write@num+1
   594  0052  0874               	movf	?___lwmod,w
   595  0053  00B5               	movwf	SevenSeg1_Write@num
   596                           
   597                           ;main.c: 126:     SevenSeg1_Digits[1] = num / 100;
   598  0054  3064               	movlw	100
   599  0055  00F4               	movwf	___lwdiv@divisor
   600  0056  3000               	movlw	0
   601  0057  00F5               	movwf	___lwdiv@divisor+1
   602  0058  0836               	movf	SevenSeg1_Write@num+1,w
   603  0059  00F7               	movwf	___lwdiv@dividend+1
   604  005A  0835               	movf	SevenSeg1_Write@num,w
   605  005B  00F6               	movwf	___lwdiv@dividend
   606  005C  120A  118A  2106  120A  118A  	fcall	___lwdiv
   607  0061  0875               	movf	?___lwdiv+1,w
   608  0062  1283               	bcf	3,5	;RP0=0, select bank0
   609  0063  1303               	bcf	3,6	;RP1=0, select bank0
   610  0064  00AD               	movwf	_SevenSeg1_Digits+3
   611  0065  0874               	movf	?___lwdiv,w
   612  0066  00AC               	movwf	_SevenSeg1_Digits+2
   613                           
   614                           ;main.c: 127:     num%=100;
   615  0067  3064               	movlw	100
   616  0068  00F4               	movwf	___lwmod@divisor
   617  0069  3000               	movlw	0
   618  006A  00F5               	movwf	___lwmod@divisor+1
   619  006B  0836               	movf	SevenSeg1_Write@num+1,w
   620  006C  00F7               	movwf	___lwmod@dividend+1
   621  006D  0835               	movf	SevenSeg1_Write@num,w
   622  006E  00F6               	movwf	___lwmod@dividend
   623  006F  120A  118A  214C  120A  118A  	fcall	___lwmod
   624  0074  0875               	movf	?___lwmod+1,w
   625  0075  1283               	bcf	3,5	;RP0=0, select bank0
   626  0076  1303               	bcf	3,6	;RP1=0, select bank0
   627  0077  00B6               	movwf	SevenSeg1_Write@num+1
   628  0078  0874               	movf	?___lwmod,w
   629  0079  00B5               	movwf	SevenSeg1_Write@num
   630                           
   631                           ;main.c: 128:     SevenSeg1_Digits[2] = num / 10;
   632  007A  300A               	movlw	10
   633  007B  00F4               	movwf	___lwdiv@divisor
   634  007C  3000               	movlw	0
   635  007D  00F5               	movwf	___lwdiv@divisor+1
   636  007E  0836               	movf	SevenSeg1_Write@num+1,w
   637  007F  00F7               	movwf	___lwdiv@dividend+1
   638  0080  0835               	movf	SevenSeg1_Write@num,w
   639  0081  00F6               	movwf	___lwdiv@dividend
   640  0082  120A  118A  2106  120A  118A  	fcall	___lwdiv
   641  0087  0875               	movf	?___lwdiv+1,w
   642  0088  1283               	bcf	3,5	;RP0=0, select bank0
   643  0089  1303               	bcf	3,6	;RP1=0, select bank0
   644  008A  00AF               	movwf	_SevenSeg1_Digits+5
   645  008B  0874               	movf	?___lwdiv,w
   646  008C  00AE               	movwf	_SevenSeg1_Digits+4
   647                           
   648                           ;main.c: 129:     num%=10;
   649  008D  300A               	movlw	10
   650  008E  00F4               	movwf	___lwmod@divisor
   651  008F  3000               	movlw	0
   652  0090  00F5               	movwf	___lwmod@divisor+1
   653  0091  0836               	movf	SevenSeg1_Write@num+1,w
   654  0092  00F7               	movwf	___lwmod@dividend+1
   655  0093  0835               	movf	SevenSeg1_Write@num,w
   656  0094  00F6               	movwf	___lwmod@dividend
   657  0095  120A  118A  214C  120A  118A  	fcall	___lwmod
   658  009A  0875               	movf	?___lwmod+1,w
   659  009B  1283               	bcf	3,5	;RP0=0, select bank0
   660  009C  1303               	bcf	3,6	;RP1=0, select bank0
   661  009D  00B6               	movwf	SevenSeg1_Write@num+1
   662  009E  0874               	movf	?___lwmod,w
   663  009F  00B5               	movwf	SevenSeg1_Write@num
   664  00A0                     l982:
   665                           
   666                           ;main.c: 130:     SevenSeg1_Digits[3]=num;
   667  00A0  0836               	movf	SevenSeg1_Write@num+1,w
   668  00A1  00B1               	movwf	_SevenSeg1_Digits+7
   669  00A2  0835               	movf	SevenSeg1_Write@num,w
   670  00A3  00B0               	movwf	_SevenSeg1_Digits+6
   671  00A4                     l74:
   672  00A4  0008               	return
   673  00A5                     __end_of_SevenSeg1_Write:
   674                           
   675                           	psect	text2
   676  014C                     __ptext2:	
   677 ;; *************** function ___lwmod *****************
   678 ;; Defined at:
   679 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  divisor         2    4[COMMON] unsigned int 
   682 ;;  dividend        2    6[COMMON] unsigned int 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  counter         1    0[BANK0 ] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  2    4[COMMON] unsigned int 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         4       0       0       0       0
   695 ;;      Locals:         0       1       0       0       0
   696 ;;      Temps:          1       0       0       0       0
   697 ;;      Totals:         5       1       0       0       0
   698 ;;Total ram usage:        6 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_SevenSeg1_Write
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function ___lwmod
   710  014C                     ___lwmod:
   711  014C                     l958:	
   712                           ;incstack = 0
   713                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   714                           
   715  014C  0874               	movf	___lwmod@divisor,w
   716  014D  0475               	iorwf	___lwmod@divisor+1,w
   717  014E  1903               	btfsc	3,2
   718  014F  2951               	goto	u391
   719  0150  2952               	goto	u390
   720  0151                     u391:
   721  0151  2983               	goto	l976
   722  0152                     u390:
   723  0152                     l960:
   724  0152  1283               	bcf	3,5	;RP0=0, select bank0
   725  0153  1303               	bcf	3,6	;RP1=0, select bank0
   726  0154  01B2               	clrf	___lwmod@counter
   727  0155  0AB2               	incf	___lwmod@counter,f
   728  0156  2962               	goto	l966
   729  0157                     l962:
   730  0157  3001               	movlw	1
   731  0158                     u405:
   732  0158  1003               	clrc
   733  0159  0DF4               	rlf	___lwmod@divisor,f
   734  015A  0DF5               	rlf	___lwmod@divisor+1,f
   735  015B  3EFF               	addlw	-1
   736  015C  1D03               	skipz
   737  015D  2958               	goto	u405
   738  015E                     l964:
   739  015E  3001               	movlw	1
   740  015F  00F8               	movwf	??___lwmod
   741  0160  0878               	movf	??___lwmod,w
   742  0161  07B2               	addwf	___lwmod@counter,f
   743  0162                     l966:
   744  0162  1FF5               	btfss	___lwmod@divisor+1,7
   745  0163  2965               	goto	u411
   746  0164  2966               	goto	u410
   747  0165                     u411:
   748  0165  2957               	goto	l962
   749  0166                     u410:
   750  0166                     l968:
   751  0166  0875               	movf	___lwmod@divisor+1,w
   752  0167  0277               	subwf	___lwmod@dividend+1,w
   753  0168  1D03               	skipz
   754  0169  296C               	goto	u425
   755  016A  0874               	movf	___lwmod@divisor,w
   756  016B  0276               	subwf	___lwmod@dividend,w
   757  016C                     u425:
   758  016C  1C03               	skipc
   759  016D  296F               	goto	u421
   760  016E  2970               	goto	u420
   761  016F                     u421:
   762  016F  2976               	goto	l972
   763  0170                     u420:
   764  0170                     l970:
   765  0170  0874               	movf	___lwmod@divisor,w
   766  0171  02F6               	subwf	___lwmod@dividend,f
   767  0172  0875               	movf	___lwmod@divisor+1,w
   768  0173  1C03               	skipc
   769  0174  03F7               	decf	___lwmod@dividend+1,f
   770  0175  02F7               	subwf	___lwmod@dividend+1,f
   771  0176                     l972:
   772  0176  3001               	movlw	1
   773  0177                     u435:
   774  0177  1003               	clrc
   775  0178  0CF5               	rrf	___lwmod@divisor+1,f
   776  0179  0CF4               	rrf	___lwmod@divisor,f
   777  017A  3EFF               	addlw	-1
   778  017B  1D03               	skipz
   779  017C  2977               	goto	u435
   780  017D                     l974:
   781  017D  3001               	movlw	1
   782  017E  02B2               	subwf	___lwmod@counter,f
   783  017F  1D03               	btfss	3,2
   784  0180  2982               	goto	u441
   785  0181  2983               	goto	u440
   786  0182                     u441:
   787  0182  2966               	goto	l968
   788  0183                     u440:
   789  0183                     l976:
   790  0183  0877               	movf	___lwmod@dividend+1,w
   791  0184  00F5               	movwf	?___lwmod+1
   792  0185  0876               	movf	___lwmod@dividend,w
   793  0186  00F4               	movwf	?___lwmod
   794  0187                     l442:
   795  0187  0008               	return
   796  0188                     __end_of___lwmod:
   797                           
   798                           	psect	text3
   799  0106                     __ptext3:	
   800 ;; *************** function ___lwdiv *****************
   801 ;; Defined at:
   802 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;  divisor         2    4[COMMON] unsigned int 
   805 ;;  dividend        2    6[COMMON] unsigned int 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  quotient        2    0[BANK0 ] unsigned int 
   808 ;;  counter         1    2[BANK0 ] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  2    4[COMMON] unsigned int 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         4       0       0       0       0
   819 ;;      Locals:         0       3       0       0       0
   820 ;;      Temps:          1       0       0       0       0
   821 ;;      Totals:         5       3       0       0       0
   822 ;;Total ram usage:        8 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_SevenSeg1_Write
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function ___lwdiv
   834  0106                     ___lwdiv:
   835  0106                     l816:	
   836                           ;incstack = 0
   837                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   838                           
   839  0106  1283               	bcf	3,5	;RP0=0, select bank0
   840  0107  1303               	bcf	3,6	;RP1=0, select bank0
   841  0108  01B2               	clrf	___lwdiv@quotient
   842  0109  01B3               	clrf	___lwdiv@quotient+1
   843  010A                     l818:
   844  010A  0874               	movf	___lwdiv@divisor,w
   845  010B  0475               	iorwf	___lwdiv@divisor+1,w
   846  010C  1903               	btfsc	3,2
   847  010D  290F               	goto	u201
   848  010E  2910               	goto	u200
   849  010F                     u201:
   850  010F  2947               	goto	l838
   851  0110                     u200:
   852  0110                     l820:
   853  0110  01B4               	clrf	___lwdiv@counter
   854  0111  0AB4               	incf	___lwdiv@counter,f
   855  0112  291E               	goto	l826
   856  0113                     l822:
   857  0113  3001               	movlw	1
   858  0114                     u215:
   859  0114  1003               	clrc
   860  0115  0DF4               	rlf	___lwdiv@divisor,f
   861  0116  0DF5               	rlf	___lwdiv@divisor+1,f
   862  0117  3EFF               	addlw	-1
   863  0118  1D03               	skipz
   864  0119  2914               	goto	u215
   865  011A                     l824:
   866  011A  3001               	movlw	1
   867  011B  00F8               	movwf	??___lwdiv
   868  011C  0878               	movf	??___lwdiv,w
   869  011D  07B4               	addwf	___lwdiv@counter,f
   870  011E                     l826:
   871  011E  1FF5               	btfss	___lwdiv@divisor+1,7
   872  011F  2921               	goto	u221
   873  0120  2922               	goto	u220
   874  0121                     u221:
   875  0121  2913               	goto	l822
   876  0122                     u220:
   877  0122                     l828:
   878  0122  3001               	movlw	1
   879  0123                     u235:
   880  0123  1003               	clrc
   881  0124  0DB2               	rlf	___lwdiv@quotient,f
   882  0125  0DB3               	rlf	___lwdiv@quotient+1,f
   883  0126  3EFF               	addlw	-1
   884  0127  1D03               	skipz
   885  0128  2923               	goto	u235
   886  0129  0875               	movf	___lwdiv@divisor+1,w
   887  012A  0277               	subwf	___lwdiv@dividend+1,w
   888  012B  1D03               	skipz
   889  012C  292F               	goto	u245
   890  012D  0874               	movf	___lwdiv@divisor,w
   891  012E  0276               	subwf	___lwdiv@dividend,w
   892  012F                     u245:
   893  012F  1C03               	skipc
   894  0130  2932               	goto	u241
   895  0131  2933               	goto	u240
   896  0132                     u241:
   897  0132  293A               	goto	l834
   898  0133                     u240:
   899  0133                     l830:
   900  0133  0874               	movf	___lwdiv@divisor,w
   901  0134  02F6               	subwf	___lwdiv@dividend,f
   902  0135  0875               	movf	___lwdiv@divisor+1,w
   903  0136  1C03               	skipc
   904  0137  03F7               	decf	___lwdiv@dividend+1,f
   905  0138  02F7               	subwf	___lwdiv@dividend+1,f
   906  0139                     l832:
   907  0139  1432               	bsf	___lwdiv@quotient,0
   908  013A                     l834:
   909  013A  3001               	movlw	1
   910  013B                     u255:
   911  013B  1003               	clrc
   912  013C  0CF5               	rrf	___lwdiv@divisor+1,f
   913  013D  0CF4               	rrf	___lwdiv@divisor,f
   914  013E  3EFF               	addlw	-1
   915  013F  1D03               	skipz
   916  0140  293B               	goto	u255
   917  0141                     l836:
   918  0141  3001               	movlw	1
   919  0142  02B4               	subwf	___lwdiv@counter,f
   920  0143  1D03               	btfss	3,2
   921  0144  2946               	goto	u261
   922  0145  2947               	goto	u260
   923  0146                     u261:
   924  0146  2922               	goto	l828
   925  0147                     u260:
   926  0147                     l838:
   927  0147  0833               	movf	___lwdiv@quotient+1,w
   928  0148  00F5               	movwf	?___lwdiv+1
   929  0149  0832               	movf	___lwdiv@quotient,w
   930  014A  00F4               	movwf	?___lwdiv
   931  014B                     l432:
   932  014B  0008               	return
   933  014C                     __end_of___lwdiv:
   934                           
   935                           	psect	text4
   936  01DD                     __ptext4:	
   937 ;; *************** function _SevenSeg1_Init *****************
   938 ;; Defined at:
   939 ;;		line 114 in file "main.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0
   956 ;;      Totals:         0       0       0       0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 2
   960 ;; This function calls:
   961 ;;		_TMR1_Init
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _SevenSeg1_Init
   969  01DD                     _SevenSeg1_Init:
   970  01DD                     l716:	
   971                           ;incstack = 0
   972                           ; Regs used in _SevenSeg1_Init: [status,2+status,0+pclath+cstack]
   973                           
   974                           
   975                           ;main.c: 116:   TMR1_Init();
   976  01DD  120A  118A  21CA  120A  118A  	fcall	_TMR1_Init
   977  01E2                     l718:
   978                           
   979                           ;main.c: 117:   TRISD = 0x00;
   980  01E2  1683               	bsf	3,5	;RP0=1, select bank1
   981  01E3  1303               	bcf	3,6	;RP1=0, select bank1
   982  01E4  0188               	clrf	8	;volatile
   983  01E5                     l720:
   984                           
   985                           ;main.c: 118:   PORTD = 0x00;
   986  01E5  1283               	bcf	3,5	;RP0=0, select bank0
   987  01E6  1303               	bcf	3,6	;RP1=0, select bank0
   988  01E7  0188               	clrf	8	;volatile
   989  01E8                     l71:
   990  01E8  0008               	return
   991  01E9                     __end_of_SevenSeg1_Init:
   992                           
   993                           	psect	text5
   994  01CA                     __ptext5:	
   995 ;; *************** function _TMR1_Init *****************
   996 ;; Defined at:
   997 ;;		line 96 in file "main.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		None
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_SevenSeg1_Init
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _TMR1_Init
  1027  01CA                     _TMR1_Init:
  1028  01CA                     l666:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _TMR1_Init: []
  1031                           
  1032                           
  1033                           ;main.c: 100:   TMR1 = 55535;
  1034  01CA  30D8               	movlw	216
  1035  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1036  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1037  01CD  008F               	movwf	15	;volatile
  1038  01CE  30EF               	movlw	239
  1039  01CF  008E               	movwf	14	;volatile
  1040                           
  1041                           ;main.c: 102:   TMR1CS = 0;
  1042  01D0  1090               	bcf	16,1	;volatile
  1043                           
  1044                           ;main.c: 104:   T1CKPS0 = 0;
  1045  01D1  1210               	bcf	16,4	;volatile
  1046                           
  1047                           ;main.c: 105:   T1CKPS1 = 0;
  1048  01D2  1290               	bcf	16,5	;volatile
  1049                           
  1050                           ;main.c: 107:   TMR1ON = 1;
  1051  01D3  1410               	bsf	16,0	;volatile
  1052                           
  1053                           ;main.c: 109:   TMR1IE = 1;
  1054  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  1055  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  1056  01D6  140C               	bsf	12,0	;volatile
  1057                           
  1058                           ;main.c: 110:   TMR1IF = 0;
  1059  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1060  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1061  01D9  100C               	bcf	12,0	;volatile
  1062                           
  1063                           ;main.c: 111:   PEIE = 1;
  1064  01DA  170B               	bsf	11,6	;volatile
  1065                           
  1066                           ;main.c: 112:   GIE = 1;
  1067  01DB  178B               	bsf	11,7	;volatile
  1068  01DC                     l68:
  1069  01DC  0008               	return
  1070  01DD                     __end_of_TMR1_Init:
  1071                           
  1072                           	psect	text6
  1073  00A5                     __ptext6:	
  1074 ;; *************** function _ISR *****************
  1075 ;; Defined at:
  1076 ;;		line 45 in file "main.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1090 ;;      Params:         0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0
  1092 ;;      Temps:          4       0       0       0       0
  1093 ;;      Totals:         4       0       0       0       0
  1094 ;;Total ram usage:        4 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		Interrupt level 1
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _ISR
  1105  00A5                     _ISR:
  1106  00A5                     i1l890:
  1107                           
  1108                           ;main.c: 47:   if(TMR1IF)
  1109  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1110  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1111  00A7  1C0C               	btfss	12,0	;volatile
  1112  00A8  28AA               	goto	u33_21
  1113  00A9  28AB               	goto	u33_20
  1114  00AA                     u33_21:
  1115  00AA  28FD               	goto	i1l65
  1116  00AB                     u33_20:
  1117  00AB                     i1l892:
  1118                           
  1119                           ;main.c: 48:   {;main.c: 49:     if(Check==0)
  1120  00AB  0879               	movf	_Check,w
  1121  00AC  1D03               	btfss	3,2
  1122  00AD  28AF               	goto	u34_21
  1123  00AE  28B0               	goto	u34_20
  1124  00AF                     u34_21:
  1125  00AF  28BB               	goto	i1l906
  1126  00B0                     u34_20:
  1127  00B0                     i1l894:
  1128                           
  1129                           ;main.c: 50:     {;main.c: 51:       PORTD = 0x00;
  1130  00B0  0188               	clrf	8	;volatile
  1131  00B1                     i1l896:
  1132                           
  1133                           ;main.c: 52:       PORTCbits.RC0= 1;
  1134  00B1  1407               	bsf	7,0	;volatile
  1135  00B2                     i1l898:
  1136                           
  1137                           ;main.c: 53:       PORTCbits.RC1 =0;
  1138  00B2  1087               	bcf	7,1	;volatile
  1139  00B3                     i1l900:
  1140                           
  1141                           ;main.c: 54:       PORTCbits.RC2 =0;
  1142  00B3  1107               	bcf	7,2	;volatile
  1143  00B4                     i1l902:
  1144                           
  1145                           ;main.c: 55:       PORTCbits.RC3 =0;
  1146  00B4  1187               	bcf	7,3	;volatile
  1147  00B5                     i1l904:
  1148                           
  1149                           ;main.c: 56:       PORTD = Segments_Code[SevenSeg1_Digits[0]];
  1150  00B5  082A               	movf	_SevenSeg1_Digits,w
  1151  00B6  3E20               	addlw	(low (_Segments_Code| 0))& (0+255)
  1152  00B7  0084               	movwf	4
  1153  00B8  1383               	bcf	3,7	;select IRP bank0
  1154  00B9  0800               	movf	0,w
  1155  00BA  0088               	movwf	8	;volatile
  1156  00BB                     i1l906:
  1157                           
  1158                           ;main.c: 58:     if(Check==1)
  1159  00BB  0379               	decf	_Check,w
  1160  00BC  1D03               	btfss	3,2
  1161  00BD  28BF               	goto	u35_21
  1162  00BE  28C0               	goto	u35_20
  1163  00BF                     u35_21:
  1164  00BF  28CB               	goto	i1l920
  1165  00C0                     u35_20:
  1166  00C0                     i1l908:
  1167                           
  1168                           ;main.c: 59:     {;main.c: 60:       PORTD = 0x00;
  1169  00C0  0188               	clrf	8	;volatile
  1170  00C1                     i1l910:
  1171                           
  1172                           ;main.c: 61:       PORTCbits.RC0= 0;
  1173  00C1  1007               	bcf	7,0	;volatile
  1174  00C2                     i1l912:
  1175                           
  1176                           ;main.c: 62:       PORTCbits.RC1 =1;
  1177  00C2  1487               	bsf	7,1	;volatile
  1178  00C3                     i1l914:
  1179                           
  1180                           ;main.c: 63:       PORTCbits.RC2 =0;
  1181  00C3  1107               	bcf	7,2	;volatile
  1182  00C4                     i1l916:
  1183                           
  1184                           ;main.c: 64:       PORTCbits.RC3 =0;
  1185  00C4  1187               	bcf	7,3	;volatile
  1186  00C5                     i1l918:
  1187                           
  1188                           ;main.c: 65:       PORTD = Segments_Code[SevenSeg1_Digits[1]];
  1189  00C5  082C               	movf	_SevenSeg1_Digits+2,w
  1190  00C6  3E20               	addlw	(low (_Segments_Code| 0))& (0+255)
  1191  00C7  0084               	movwf	4
  1192  00C8  1383               	bcf	3,7	;select IRP bank0
  1193  00C9  0800               	movf	0,w
  1194  00CA  0088               	movwf	8	;volatile
  1195  00CB                     i1l920:
  1196                           
  1197                           ;main.c: 67:     if(Check==2)
  1198  00CB  3002               	movlw	2
  1199  00CC  0679               	xorwf	_Check,w
  1200  00CD  1D03               	btfss	3,2
  1201  00CE  28D0               	goto	u36_21
  1202  00CF  28D1               	goto	u36_20
  1203  00D0                     u36_21:
  1204  00D0  28DC               	goto	i1l934
  1205  00D1                     u36_20:
  1206  00D1                     i1l922:
  1207                           
  1208                           ;main.c: 68:     {;main.c: 69:       PORTD = 0x00;
  1209  00D1  0188               	clrf	8	;volatile
  1210  00D2                     i1l924:
  1211                           
  1212                           ;main.c: 70:       PORTCbits.RC0= 0;
  1213  00D2  1007               	bcf	7,0	;volatile
  1214  00D3                     i1l926:
  1215                           
  1216                           ;main.c: 71:       PORTCbits.RC1 =0;
  1217  00D3  1087               	bcf	7,1	;volatile
  1218  00D4                     i1l928:
  1219                           
  1220                           ;main.c: 72:       PORTCbits.RC2 =1;
  1221  00D4  1507               	bsf	7,2	;volatile
  1222  00D5                     i1l930:
  1223                           
  1224                           ;main.c: 73:       PORTCbits.RC3 =0;
  1225  00D5  1187               	bcf	7,3	;volatile
  1226  00D6                     i1l932:
  1227                           
  1228                           ;main.c: 74:       PORTD = Segments_Code[SevenSeg1_Digits[2]];
  1229  00D6  082E               	movf	_SevenSeg1_Digits+4,w
  1230  00D7  3E20               	addlw	(low (_Segments_Code| 0))& (0+255)
  1231  00D8  0084               	movwf	4
  1232  00D9  1383               	bcf	3,7	;select IRP bank0
  1233  00DA  0800               	movf	0,w
  1234  00DB  0088               	movwf	8	;volatile
  1235  00DC                     i1l934:
  1236                           
  1237                           ;main.c: 76:     if(Check==3)
  1238  00DC  3003               	movlw	3
  1239  00DD  0679               	xorwf	_Check,w
  1240  00DE  1D03               	btfss	3,2
  1241  00DF  28E1               	goto	u37_21
  1242  00E0  28E2               	goto	u37_20
  1243  00E1                     u37_21:
  1244  00E1  28ED               	goto	i1l948
  1245  00E2                     u37_20:
  1246  00E2                     i1l936:
  1247                           
  1248                           ;main.c: 77:     {;main.c: 78:       PORTD = 0x00;
  1249  00E2  0188               	clrf	8	;volatile
  1250  00E3                     i1l938:
  1251                           
  1252                           ;main.c: 79:       PORTCbits.RC0= 0;
  1253  00E3  1007               	bcf	7,0	;volatile
  1254  00E4                     i1l940:
  1255                           
  1256                           ;main.c: 80:       PORTCbits.RC1 =0;
  1257  00E4  1087               	bcf	7,1	;volatile
  1258  00E5                     i1l942:
  1259                           
  1260                           ;main.c: 81:       PORTCbits.RC2 =0;
  1261  00E5  1107               	bcf	7,2	;volatile
  1262  00E6                     i1l944:
  1263                           
  1264                           ;main.c: 82:       PORTCbits.RC3 =1;
  1265  00E6  1587               	bsf	7,3	;volatile
  1266  00E7                     i1l946:
  1267                           
  1268                           ;main.c: 83:       PORTD = Segments_Code[SevenSeg1_Digits[3]];
  1269  00E7  0830               	movf	_SevenSeg1_Digits+6,w
  1270  00E8  3E20               	addlw	(low (_Segments_Code| 0))& (0+255)
  1271  00E9  0084               	movwf	4
  1272  00EA  1383               	bcf	3,7	;select IRP bank0
  1273  00EB  0800               	movf	0,w
  1274  00EC  0088               	movwf	8	;volatile
  1275  00ED                     i1l948:
  1276                           
  1277                           ;main.c: 86:   Check++;
  1278  00ED  3001               	movlw	1
  1279  00EE  00F0               	movwf	??_ISR
  1280  00EF  0870               	movf	??_ISR,w
  1281  00F0  07F9               	addwf	_Check,f
  1282  00F1                     i1l950:
  1283                           
  1284                           ;main.c: 87:     if(Check==4)
  1285  00F1  3004               	movlw	4
  1286  00F2  0679               	xorwf	_Check,w
  1287  00F3  1D03               	btfss	3,2
  1288  00F4  28F6               	goto	u38_21
  1289  00F5  28F7               	goto	u38_20
  1290  00F6                     u38_21:
  1291  00F6  28F8               	goto	i1l954
  1292  00F7                     u38_20:
  1293  00F7                     i1l952:
  1294                           
  1295                           ;main.c: 88:     Check=0;
  1296  00F7  01F9               	clrf	_Check
  1297  00F8                     i1l954:
  1298                           
  1299                           ;main.c: 89:     TMR1IF = 0;
  1300  00F8  100C               	bcf	12,0	;volatile
  1301  00F9                     i1l956:
  1302                           
  1303                           ;main.c: 90:     TMR1 = 55535;
  1304  00F9  30D8               	movlw	216
  1305  00FA  008F               	movwf	15	;volatile
  1306  00FB  30EF               	movlw	239
  1307  00FC  008E               	movwf	14	;volatile
  1308  00FD                     i1l65:
  1309  00FD  0873               	movf	??_ISR+3,w
  1310  00FE  008A               	movwf	10
  1311  00FF  0872               	movf	??_ISR+2,w
  1312  0100  0084               	movwf	4
  1313  0101  0E71               	swapf	??_ISR+1,w
  1314  0102  0083               	movwf	3
  1315  0103  0EFE               	swapf	btemp,f
  1316  0104  0E7E               	swapf	btemp,w
  1317  0105  0009               	retfie
  1318  0106                     __end_of_ISR:
  1319  007E                     btemp	set	126	;btemp
  1320  007E                     wtemp0	set	126
  1321                           
  1322                           	psect	intentry
  1323  0004                     __pintentry:	
  1324                           ;incstack = 0
  1325                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  1326                           
  1327  0004                     interrupt_function:
  1328  007E                     saved_w	set	btemp
  1329  0004  00FE               	movwf	btemp
  1330  0005  0E03               	swapf	3,w
  1331  0006  00F1               	movwf	??_ISR+1
  1332  0007  0804               	movf	4,w
  1333  0008  00F2               	movwf	??_ISR+2
  1334  0009  080A               	movf	10,w
  1335  000A  00F3               	movwf	??_ISR+3
  1336  000B  120A  118A  28A5   	ljmp	_ISR

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      8      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SevenSeg1_Write->___lwdiv
    _SevenSeg1_Write->___lwmod

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SevenSeg1_Write
    _SevenSeg1_Write->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1706
                                              5 BANK0      3     3      0
                     _SevenSeg1_Init
                    _SevenSeg1_Write
 ---------------------------------------------------------------------------------
 (1) _SevenSeg1_Write                                      2     0      2    1706
                                              3 BANK0      2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     772
                                              4 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SevenSeg1_Init                                       0     0      0       0
                          _TMR1_Init
 ---------------------------------------------------------------------------------
 (2) _TMR1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SevenSeg1_Init
     _TMR1_Init
   _SevenSeg1_Write
     ___lwdiv
     ___lwmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 12 00:26:47 2022

                       pc 0002                        l71 01E8                        l74 00A4  
                      l68 01DC                        fsr 0004                       l432 014B  
                     l442 0187                       l720 01E5                       l716 01DD  
                     l820 0110                       l718 01E2                       l830 0133  
                     l822 0113                       l832 0139                       l824 011A  
                     l816 0106                       l666 01CA                       l834 013A  
                     l826 011E                       l818 010A                       l836 0141  
                     l828 0122                       l838 0147                       l960 0152  
                     l970 0170                       l962 0157                       l972 0176  
                     l964 015E                       l980 002C                       l974 017D  
                     l966 0162                       l958 014C                       l982 00A0  
                     l990 0191                       l968 0166                       l976 0183  
                     l992 0192                       l984 0188                       l994 0193  
                     l986 018D                       _GIE 005F                       l996 0196  
                     l988 0190                       l998 0197                       u200 0110  
                     u201 010F                       u220 0122                       u221 0121  
                     u215 0114                       u240 0133                       u241 0132  
                     u410 0166                       u235 0123                       u411 0165  
                     u260 0147                       u420 0170                       u261 0146  
                     u245 012F                       u421 016F                       u405 0158  
                     u255 013B                       u440 0183                       u441 0182  
                     u425 016C                       u435 0177                       _ISR 00A5  
                     u390 0152                       u391 0151                       u457 01A2  
                     fsr0 0004                       indf 0000                      ?_ISR 0070  
                    l1000 0198                      l1002 0199                      l1004 019A  
                    _ADON 00F8                      _PEIE 005E                      i1l65 00FD  
                    _TMR1 000E                      _main 0188                      btemp 007E  
                    start 000E                     ??_ISR 0070                     ?_main 0070  
         __end_of___lwdiv 014C           __end_of___lwmod 0188                     i1l900 00B3  
                   i1l910 00C1                     i1l902 00B4                     i1l912 00C2  
                   i1l920 00CB                     i1l904 00B5                     i1l930 00D5  
                   i1l922 00D1                     i1l914 00C3                     i1l906 00BB  
                   i1l940 00E4                     i1l932 00D6                     i1l924 00D2  
                   i1l916 00C4                     i1l908 00C0                     i1l950 00F1  
                   i1l942 00E5                     i1l926 00D3                     i1l934 00DC  
                   i1l918 00C5                     i1l952 00F7                     i1l944 00E6  
                   i1l936 00E2                     i1l928 00D4                     i1l954 00F8  
                   i1l946 00E7                     i1l938 00E3                     i1l890 00A5  
                   i1l956 00F9                     i1l948 00ED                     i1l892 00AB  
                   i1l894 00B0                     i1l896 00B1                     i1l898 00B2  
                   u33_20 00AB                     u33_21 00AA                     u34_20 00B0  
                   u34_21 00AF                     u35_20 00C0                     u35_21 00BF  
                   _PORTD 0008                     u36_20 00D1                     u36_21 00D0  
                   u37_20 00E2                     u37_21 00E1                     u38_20 00F7  
                   u38_21 00F6                     _TRISD 0088                     _Check 0079  
      __size_of_TMR1_Init 0013                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 0011              __end_of_main 01B7  
       ??_SevenSeg1_Write 0079                    ??_main 0037                    _TMR1IE 0460  
                  _TMR1IF 0060                    _TMR1CS 0081                    _TMR1ON 0080  
                  _TRISC0 0438                    _TRISC1 0439                    _TRISC2 043A  
                  _TRISC3 043B            _SevenSeg1_Init 01DD         __end_of_TMR1_Init 01DD  
               ??___lwdiv 0078                 ??___lwmod 0078                    saved_w 007E  
 __end_of__initialization 0028    __end_of_SevenSeg1_Init 01E9            __pcstackCOMMON 0070  
            __pidataBANK0 01E9                __pbssBANK0 002A           ?_SevenSeg1_Init 0070  
              __pmaintext 0188                __pintentry 0004                   _T1CKPS0 0084  
                 _T1CKPS1 0085           _SevenSeg1_Write 002C                   ___lwdiv 0106  
                 ___lwmod 014C                   __ptext1 002C                   __ptext2 014C  
                 __ptext3 0106                   __ptext4 01DD                   __ptext5 01CA  
                 __ptext6 00A5              __size_of_ISR 0061      end_of_initialization 0028  
           _Segments_Code 0020                 _TMR1_Init 01CA                 _PORTCbits 0007  
 __end_of_SevenSeg1_Write 00A5                ?_TMR1_Init 0070       start_initialization 0011  
             __end_of_ISR 0106          ??_SevenSeg1_Init 0074                init_fetch0 01B7  
             __pdataBANK0 0020               __pbssCOMMON 0079                 ___latbits 0002  
           __pcstackBANK0 0032          ?_SevenSeg1_Write 0035          ___lwdiv@dividend 0076  
                ?___lwdiv 0074                  ?___lwmod 0074               ??_TMR1_Init 0074  
        ___lwdiv@quotient 0032         interrupt_function 0004          _SevenSeg1_Digits 002A  
        __size_of___lwdiv 0046          __size_of___lwmod 003C           ___lwdiv@divisor 0074  
         ___lwdiv@counter 0034             __size_of_main 002F        SevenSeg1_Write@num 0035  
                init_ram0 01BB                  intlevel1 0000          ___lwmod@dividend 0076  
         ___lwmod@divisor 0074           ___lwmod@counter 0032   __size_of_SevenSeg1_Init 000C  
__size_of_SevenSeg1_Write 0079  
